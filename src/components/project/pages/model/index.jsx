import React, { useEffect, useState } from "react";
import Layout from "../../../core/layout";
import ListTable from "../../../core/list/list";
import { Container } from "../../../core/layout/styels";

const Model = (props) => {
  // to update the page title
  useEffect(() => {
    document.title = `Model - EventHex Portal`;
  }, []);

  const [attributes] = useState([
    {
      type: "text",
      placeholder: "Model Name",
      name: "modelName",
      validation: "",
      default: "",
      label: "Model Name",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "API Name",
      name: "apiName",
      validation: "",
      default: "",
      label: "API Name",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Type of Model",
      name: "typeofModel",
      validation: "",
      default: "",
      label: "Type of Model",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "select",
      apiType: "API",
      selectApi: "layout/select",
      placeholder: "layout",
      name: "layout",
      showItem: "",
      validation: "",
      default: "",
      tag: true,
      label: "layout",
      required: false,
      view: true,
      add: true,
      update: true,
      filter: false,
    },
    {
      type: "textarea",
      placeholder: "Description",
      name: "description",
      validation: "",
      default: "",
      label: "Description",
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Short Name",
      name: "shortName",
      validation: "",
      default: "",
      label: "Short Name",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Add",
      name: "add",
      validation: "",
      default: false,
      label: "Add",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Edit",
      name: "edit",
      validation: "",
      default: false,
      label: "Edit",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Delete",
      name: "delete",
      validation: "",
      default: false,
      label: "Delete",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Filter",
      name: "filter",
      validation: "",
      default: false,
      label: "Filter",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Sort",
      name: "sort",
      validation: "",
      default: false,
      label: "Sort",
      tag: true,
      view: true,
      add: true,
      update: true,
    },

    {
      type: "checkbox",
      placeholder: "Print",
      name: "print",
      validation: "",
      default: false,
      label: "Print",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Export",
      name: "export",
      validation: "",
      default: false,
      label: "Export",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Search",
      name: "search",
      validation: "",
      default: false,
      label: "Search",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Customization",
      name: "customization",
      validation: "",
      default: false,
      label: "Customization",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
  ]);

  const [attributesModel] = useState([
    {
      type: "text",
      placeholder: "Title",
      name: "title",
      validation: "",
      default: "",
      label: "Title",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Type of Attribute",
      name: "typeOfAttribute",
      validation: "",
      default: "",
      label: "Type of Attribute",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Input Label",
      name: "inputLabel",
      validation: "",
      default: "",
      label: "Input Label",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Sequence",
      name: "sequence",
      validation: "",
      default: "",
      label: "Sequence",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Placeholder",
      name: "placeholder",
      validation: "",
      default: "",
      label: "Placeholder",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Is Required",
      name: "isRequired",
      validation: "",
      default: false,
      label: "Is Required",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Validation",
      name: "validation",
      validation: "",
      default: "",
      label: "Validation",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "API Type",
      name: "apiType",
      validation: "",
      default: "",
      label: "API Type",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Preload Data",
      name: "preloadData",
      validation: "",
      default: "",
      label: "Preload Data",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "select",
      apiType: "API",
      selectApi: "model/select",
      placeholder: "Model",
      name: "model",
      validation: "",
      showItem: "modelName",
      tag: true,
      default: "",
      label: "Model",
      required: true,
      view: true,
      add: true,
      update: true,
      filter: false,
    },
    {
      type: "checkbox",
      placeholder: "Add",
      name: "add",
      validation: "",
      default: false,
      label: "Add",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Edit",
      name: "edit",
      validation: "",
      default: false,
      label: "Edit",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Print",
      name: "print",
      validation: "",
      default: false,
      label: "Print",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Export",
      name: "export",
      validation: "",
      default: false,
      label: "Export",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Search",
      name: "search",
      validation: "",
      default: false,
      label: "Search",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "checkbox",
      placeholder: "Customization",
      name: "customization",
      validation: "",
      default: false,
      label: "Customization",
      tag: true,
      view: true,
      add: true,
      update: true,
    },
  ]);

  const [actions] = useState([
    {
      element: "button",
      type: "subList",
      id: "attribute",
      itemTitle: {
        name: "title",
        type: "text",
        collection: "",
      },
      exportPrivilege: true,
      title: "Attribute",
      attributes: attributesModel,
      params: {
        api: "attribute",
        parentReference: "",
        itemTitle: {
          name: "title",
          type: "text",
          collection: "",
        },
        shortName: "Attribute",
        addPrivilege: true,
        delPrivilege: true,
        updatePrivilege: true,
        customClass: "medium",
        formMode: "double",
        exportPrivilege: true,
      },
    },
  ]);

  return (
    <Container className="noshadow">
      <ListTable
        api={`model`}
        actions={actions}
        itemTitle={{ name: "modelName", type: "text", collection: "" }}
        shortName={`Model`}
        formMode={`double`}
        {...props}
        attributes={attributes}
      ></ListTable>
    </Container>
  );
};

// exporting the page with parent container layout..
export default Layout(Model);
