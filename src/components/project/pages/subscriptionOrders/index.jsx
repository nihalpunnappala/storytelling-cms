import React, { useEffect, useState } from "react";
import Layout from "../../../core/layout";
import ListTable from "../../../core/list/list";
import { Container } from "../../../core/layout/styels";
//src/components/styles/page/index.js
//if you want to write custom style wirte in above file
const SubscriptionOrders = (props) => {
  //to update the page title
  useEffect(() => {
    document.title = `Subscription Orders - EventHex Portal`;
  }, []);

  const [attributes] = useState([
    {
      type: "select",
      apiType: "API",
      selectApi: "user/select",
      placeholder: "User",
      name: "user",
      validation: "required",
      showItem: "value",
      tag: true,
      default: "",
      label: "User",
      required: true,
      view: true,
      add: true,
      update: true,
      filter: false,
      responseKey: "data"
    },
    {
      type: "select",
      apiType: "API",
      selectApi: "franchise/select",
      placeholder: "Franchise",
      name: "franchise",
      validation: "required",
      showItem: "name",
      tag: false,
      default: "",
      label: "Franchise",
      required: true,
      view: true,
      add: true,
      update: true,
      filter: false,
    },
    {
      type: "select",
      apiType: "API",
      selectApi: "subscription-plan/select",
      placeholder: "Subscription Plan",
      name: "plan",
      validation: "required",
      showItem: "title",
      tag: true,
      default: "",
      label: "Subscription Plan",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Stripe Subscription ID",
      name: "stripeSubscriptionId",        
      validation: "required",
      default: "",
      tag: false,
      label: "Stripe Subscription ID",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Stripe Customer ID",
      name: "stripeCustomerId",        
      validation: "required",
      default: "",
      tag: false,
      label: "Stripe Customer ID",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Stripe Price ID",
      name: "stripePriceId",        
      validation: "required",
      default: "",
      tag: false,
      label: "Stripe Price ID",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "select",
      placeholder: "Subscription Status",
      name: "subscriptionStatus",
      validation: "required",
      default: "incomplete",
      tag: true,
      label: "Subscription Status",
      showItem: "Subscription Status",
      required: true,
      view: true,
      filter: false,
      add: true,
      update: true,
      apiType: "CSV",
      selectApi: "incomplete,incomplete_expired,trialing,active,past_due,canceled,unpaid,paused",
    },
    {
      type: "select",
      placeholder: "Status",
      name: "status",
      validation: "required",
      default: "pending",
      tag: false,
      label: "Status",
      required: true,
      showItem: "Status",
      view: true,
      add: true,
      apiType: "CSV",
      selectApi: "pending,paid,failed,refunded",
    },
    {
      type: "select",
      placeholder: "Billing Cycle",
      name: "billingCycle",
      showItem: "",
      validation: "required",
      default: "month",
      tag: false,
      label: "Billing Cycle",
      required: true,
      view: true,
      add: true,
      update: true,
      apiType: "CSV",
      selectApi: "day,week,month,year",
    },
    {
      type: "date",
      placeholder: "Current Period Start",
      name: "currentPeriodStart",
      validation: "required",
      default: new Date().toISOString().split('T')[0],
      tag: false,
      label: "Current Period Start",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "date",
      placeholder: "Current Period End",
      name: "currentPeriodEnd",
      validation: "required",
      default: new Date(Date.now() + 30 * 24 * 60 * 60 * 1000).toISOString().split('T')[0],
      tag: false,
      label: "Current Period End",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "date",
      placeholder: "Trial Start",
      name: "trialStart",
      validation: "",
      default: "",
      tag: false,
      label: "Trial Start",
      required: false,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "date",
      placeholder: "Trial End",
      name: "trialEnd",
      validation: "",
      default: "",
      tag: false,
      label: "Trial End",
      required: false,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "date",
      placeholder: "Subscription Start Date",
      name: "subscriptionStartDate",
      validation: "",
      default: new Date().toISOString().split('T')[0],
      tag: true,
      label: "Subscription Start Date",
      required: false,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "date",
      placeholder: "Subscription End Date",
      name: "subscriptionEndDate",
      validation: "",
      default: "",
      tag: true,
      label: "Subscription End Date",
      required: false,
      view: true,
      add: true,
      update: true,
    },
  ]);

  return (
    <Container className="noshadow">
      <ListTable
        // actions={actions}
        api={`subscription-order`}
        itemTitle={{ name: "subscriptionOrders", type: "text", collection: "" }}
        shortName={`Subscription Orders`}
        formMode={`single`}
        viewMode={"table"}
        {...props}
        attributes={attributes}
      ></ListTable>
    </Container>
  );
};
// exporting the page with parent container layout..
export default Layout(SubscriptionOrders);
