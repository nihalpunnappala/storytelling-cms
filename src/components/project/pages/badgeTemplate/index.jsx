import React, { useEffect, useState } from "react";
import Layout from "../../../core/layout";
import ListTable from "../../../core/list/list";
import { Container } from "../../../core/layout/styels";
//src/components/styles/page/index.js
//if you want to write custom style wirte in above file
const BadgeTemplate = (props) => {
  //to update the page title
  useEffect(() => {
    document.title = `Badge Template - goCampus Portal`;
  }, []);

  const [attributes] = useState([
    // General Badge Template Information
    {
      type: "title",
      title: "General Badge Template Information",
      name: "info",
      add: true,
      update: true,
    },
    {
      type: "select",
      placeholder: "Template Type",
      name: "templateType",
      validation: "",
      default: "",
      label: "Template Type",
      showItem: "Template Type",
      tag: true,
      required: false,
      view: true,
      filter: false,
      add: true,
      update: true,
      apiType: "CSV",
      selectApi: "Badge,E Badge",
    },
    {
      type: "text",
      placeholder: "Template Name",
      name: "templateName",
      validation: "",
      default: "",
      label: "Template Name",
      required: true,
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "image",
      placeholder: "Template Image",
      name: "templateImage",
      validation: "",
      default: "",
      label: "Template Image",
      required: true,
      tag: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Height",
      name: "height",
      validation: "",
      default: 0,
      label: "Height (px)",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Width",
      name: "width",
      validation: "",
      default: 0,
      label: "Width (px)",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Enable Upload Image",
      name: "isUploadImage",
      default: false,
      label: "Enable Image Upload",
      required: false,
      view: true,
      add: true,
      update: true,
    },
    // Display Name Configuration
    {
      type: "title",
      title: "Display Name Configuration",
      name: "info",
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Enable Display Name",
      name: "isdisplayname",
      default: false,
      label: "Enable Display Name",
      required: false,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "X-coordinate for Name",
      name: "displaynameX",
      default: 0,
      label: "Display Name X (px)",
      required: false,
      condition: {
        item: "isdisplayname",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Y-coordinate for Name",
      name: "displaynameY",
      default: 0,
      label: "Display Name Y (px)",
      required: false,
      condition: {
        item: "isdisplayname",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Display Name Width",
      name: "displaynameWidth",
      default: 0,
      label: "Display Name Width (px)",
      required: false,
      condition: {
        item: "isdisplayname",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Font Size for Name",
      name: "displaynamefontSize",
      default: 12,
      label: "Display Name Font Size (px)",
      required: false,
      condition: {
        item: "isdisplayname",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Font for Name",
      name: "displaynameFont",
      default: "Arial",
      label: "Display Name Font",
      required: false,
      condition: {
        item: "isdisplayname",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    // QR Code Configuration
    {
      type: "title",
      title: "QR Code Configuration",
      name: "info",
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Enable QR Code",
      name: "isQrcode",
      default: false,
      label: "Enable QR Code",
      required: false,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "X-coordinate for QR",
      name: "qrcodeX",
      default: 0,
      label: "QR Code X (px)",
      required: false,
      condition: {
        item: "isQrcode",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Y-coordinate for QR",
      name: "qrcodeY",
      default: 0,
      label: "QR Code Y (px)",
      required: false,
      condition: {
        item: "isQrcode",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "QR Code Width",
      name: "qrcodeWidth",
      default: 0,
      label: "QR Code Width (px)",
      required: false,
      condition: {
        item: "isQrcode",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    // Event Name Configuration
    {
      type: "title",
      title: "Event Name Configuration",
      name: "info",
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Enable Event Name",
      name: "isdisplayEvent",
      default: false,
      label: "Enable Event Name",
      required: false,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "X-coordinate for Event",
      name: "displayEventX",
      default: 0,
      label: "Event Name X (px)",
      required: false,
      condition: {
        item: "isdisplayEvent",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Y-coordinate for Event",
      name: "displayEventY",
      default: 0,
      label: "Event Name Y (px)",
      required: false,
      condition: {
        item: "isdisplayEvent",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Event Name Width",
      name: "displayEventWidth",
      default: 0,
      label: "Event Name Width (px)",
      required: false,
      condition: {
        item: "isdisplayEvent",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Font Size for Event",
      name: "displayEventfontSize",
      default: 12,
      label: "Event Name Font Size (px)",
      required: false,
      condition: {
        item: "isdisplayEvent",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Font for Event",
      name: "displayEventFont",
      default: "Arial",
      label: "Event Name Font",
      required: false,
      condition: {
        item: "isdisplayEvent",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    // Ticket Configuration
    {
      type: "title",
      title: "Ticket Configuration",
      name: "info",
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Enable Ticket",
      name: "isdisplayTicket",
      default: false,
      label: "Enable Ticket",
      required: false,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "X-coordinate for Ticket",
      name: "displayTicketX",
      default: 0,
      label: "Ticket X (px)",
      required: false,
      condition: {
        item: "isdisplayTicket",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Y-coordinate for Ticket",
      name: "displayTicketY",
      default: 0,
      label: "Ticket Y (px)",
      required: false,
      condition: {
        item: "isdisplayTicket",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Ticket Width",
      name: "displayTicketWidth",
      default: 0,
      label: "Ticket Width (px)",
      required: false,
      condition: {
        item: "isdisplayTicket",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Font Size for Ticket",
      name: "displayTicketfontSize",
      default: 12,
      label: "Ticket Font Size (px)",
      required: false,
      condition: {
        item: "isdisplayTicket",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Font for Ticket",
      name: "displayTicketFont",
      default: "Arial",
      label: "Ticket Font",
      required: false,
      condition: {
        item: "isdisplayTicket",
        if: true,
        then: "enabled",
        else: "disabled",
      },
      view: true,
      add: true,
      update: true,
    },
    // Additional Links
    {
      type: "title",
      title: "Additional Links",
      name: "info",
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Canvas Link",
      name: "canvasLink",
      default: "",
      label: "Canvas Link",
      required: false,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "PSD Link",
      name: "psdLink",
      default: "",
      label: "PSD Link",
      required: false,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Is Default Template",
      name: "isDefault",
      default: false,
      label: "Default Template",
      required: false,
      view: true,
      add: true,
      update: true,
    },
  ]);

  return (
    <Container className="noshadow">
      <ListTable api={`badge-template`} itemTitle={{ name: "templateName", type: "text", collection: "" }} shortName={`Badge Template`} formMode={`double`} {...props} attributes={attributes}></ListTable>
    </Container>
  );
};
// exporting the page with parent container layout..
export default Layout(BadgeTemplate);
