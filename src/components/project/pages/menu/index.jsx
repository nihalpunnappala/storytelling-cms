import React, { useEffect, useState } from "react";
import Layout from "../../../core/layout";
import ListTable from "../../../core/list/list";
import { Container } from "../../../core/layout/styels";
//src/components/styles/page/index.js
//if you want to write custom style wirte in above file
const Menu = (props) => {
  //to update the page title
  useEffect(() => {
    document.title = `Menu - EventHex Portal`;
  }, []);

  const [attributes] = useState([
    {
      type: "text",
      placeholder: "Label",
      name: "label",
      validation: "",
      default: "",
      label: "Label",
      required: true,
      view: false,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Sequence",
      name: "sequence",
      validation: "",
      default: "",
      tag: true,
      label: "Sequence",
      required: true,
      view: true,
      add: true,
      update: true,
      sort: true,
    },
    {
      type: "text",
      placeholder: "Label",
      name: "label",
      validation: "",
      default: "",
      label: "Label",
      tag: true,
      required: false,
      view: true,
      add: false,
      update: false,
      sort: true,
    },
    {
      type: "text",
      placeholder: "Icon",
      name: "icon",
      validation: "",
      default: "",
      label: "Icon",
      required: true,
      tag: false,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Path",
      name: "path",
      validation: "",
      default: "",
      tag: false,
      label: "Path",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Element Name",
      name: "element",
      validation: "",
      tag: true,
      default: "",
      label: "Element Name",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Menu Group",
      name: "menuGroup",
      validation: "",
      default: "",
      label: "Menu Group",
      tag: true,
      required: false,
      view: true,
      add: true,
      update: true,
      sort: true,
    },
    {
      type: "toggle",
      placeholder: "Status",
      name: "status",
      validation: "",
      default: "true",
      tag: true,
      label: "Status",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Is Link",
      name: "isLink",
      validation: "",
      default: "false",
      label: "Is Link",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Item Open In Slug",
      name: "itemOpenInSlug",
      validation: "",
      default: "false",
      label: "Item Open In Slug",
      required: true,
      view: true,
      add: true,
      update: true,
    },
  ]);

  const [subMenuAttributes] = useState([
    {
      type: "text",
      placeholder: "Label",
      name: "label",
      validation: "",
      default: "",
      label: "Label",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "number",
      placeholder: "Sequence 01",
      name: "sequence",
      validation: "",
      default: "",
      tag: true,
      label: "Sequence 01",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Icon",
      name: "icon",
      validation: "",
      default: "",
      label: "Icon",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Path",
      name: "path",
      validation: "",
      default: "",
      label: "Path",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Element Name",
      name: "element",
      validation: "",
      default: "",
      tag: true,
      label: "Element Name",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Menu Group",
      name: "menuGroup",
      validation: "",
      default: "",
      label: "Menu Group",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Status",
      name: "status",
      validation: "",
      default: "true",
      tag: true,
      label: "Status",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Is Link",
      name: "isLink",
      validation: "",
      default: "false",
      label: "Is Link",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Item Open In Slug",
      name: "itemOpenInSlug",
      validation: "",
      default: "false",
      label: "Item Open In Slug",
      required: true,
      view: true,
      add: true,
      update: true,
    },
  ]);

  const [menuRole] = useState([
    {
      type: "select",
      apiType: "API",
      selectApi: "user-type/select",
      placeholder: "User Type",
      name: "userType",
      validation: "",
      showItem: "role",
      tag: true,
      default: "",
      label: "User Type",
      required: true,
      view: true,
      add: true,
      update: true,
      filter: false,
    },
    {
      type: "toggle",
      placeholder: "Add Permission",
      name: "add",
      validation: "",
      default: "false",
      label: "Add Permission",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Edit Permission",
      name: "update",
      validation: "",
      default: "false",
      label: "Edit Permission",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Delete Permission",
      name: "delete",
      validation: "",
      default: "false",
      label: "Delete Permission",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Export Permission",
      name: "export",
      validation: "",
      default: "false",
      label: "Export Permission",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "toggle",
      placeholder: "Status",
      name: "status",
      validation: "",
      default: "false",
      label: "Status",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
  ]);

  const [itemPages] = useState([
    {
      type: "text",
      placeholder: "Title",
      name: "title",
      validation: "",
      default: "",
      tag: true,
      label: "Title",
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "text",
      placeholder: "Key",
      name: "key",
      validation: "",
      default: "",
      label: "Key",
      tag: true,
      required: true,
      view: true,
      add: true,
      update: true,
    },
    {
      type: "select",
      placeholder: "Menu Type",
      name: "menuType",
      validation: "",
      default: "",
      label: "Menu Type",
      showItem: "Menu Type",
      tag: true,
      required: false,
      view: true,
      filter: false,
      add: true,
      update: true,
      apiType: "JSON",
      selectApi: [
        {
          id: "main",
          value: "Main Menu",
        },
        {
          id: "sub",
          value: "Sub Menu",
        },
        {
          id: "child",
          value: "Child Menu",
        },
      ],
    },
    {
      type: "select",
      apiType: "API",
      preFill: [{ id: "root", value: "Root" }],
      selectApi: "item-pages/select",
      placeholder: "Parent Page",
      name: "parentKey",
      validation: "",
      showItem: "key",
      tag: true,
      default: "",
      label: "Parent Page",
      required: true,
      view: true,
      add: true,
      update: true,
      filter: false,
    },
  ]);

  const [actions] = useState([
    {
      element: "button",
      type: "subList",
      id: "sub-menu",
      title: "Sub Menu",
      attributes: subMenuAttributes,
      params: {
        api: `sub-menu`,
        parentReference: "menu",
        itemTitle: { name: "label", type: "text", collection: "" },
        shortName: "Sub Menu",
        addPrivilege: true,
        delPrivilege: true,
        updatePrivilege: true,
        customClass: "medium",
        actions: [
          {
            element: "button",
            type: "subList",
            id: "submenu-role",
            title: "Sub Menu Role",
            attributes: menuRole,
            params: {
              api: `submenu-role`,
              parentReference: "subMenu",
              itemTitle: {
                name: "roleDisplayName",
                type: "text",
                collection: "userType",
              },
              shortName: "Sub Menu Role",
              addPrivilege: true,
              delPrivilege: true,
              updatePrivilege: true,
              customClass: "medium",
            },
          },
        ],
      },
    },
    {
      element: "button",
      type: "subList",
      id: "menu-role",
      title: "Menu Role",
      attributes: menuRole,
      params: {
        api: `menu-role`,
        parentReference: "menu",
        itemTitle: {
          name: "roleDisplayName",
          type: "text",
          collection: "userType",
        },
        shortName: "Menu Role",
        addPrivilege: true,
        delPrivilege: true,
        updatePrivilege: true,
        customClass: "medium",
      },
    },
    {
      element: "button",
      type: "subList",
      id: "item-pages",
      title: "Pages",
      icon: "item-pages",
      attributes: itemPages,
      params: {
        api: `item-pages`,
        parentReference: "menu",
        itemTitle: {
          name: "title",
          type: "text",
          collection: "",
        },
        shortName: "Pages",
        addPrivilege: true,
        delPrivilege: true,
        updatePrivilege: true,
        customClass: "medium",
        viewMode: "table",
        actions: [
          {
            element: "button",
            type: "subList",
            id: "item-pages-role",
            title: "Pages Role",
            attributes: menuRole,
            params: {
              api: `item-pages-role`,
              parentReference: "pages",
              itemTitle: {
                name: "roleDisplayName",
                type: "text",
                collection: "userType",
              },
              shortName: "Pages Role",
              addPrivilege: true,
              delPrivilege: true,
              updatePrivilege: true,
              customClass: "medium",
            },
          },
        ],
      },
    },
  ]);
  // Use the useTranslation hook from react-i18next to handle translations
  // const parkingDuration = totalDuration > 120 ? (days > 0 ? days + `d, ` : ``) + (hours > 0 ? hours + `h, ` : ``) + (minutes + t("m")) : totalDuration.toFixed(0) + ` ` + t("minutes");
  return (
    <Container className="noshadow">
      <ListTable actions={actions} api={`menu`} itemTitle={{ name: "label", type: "text", collection: "" }} shortName={`Menu`} formMode={`double`} {...props} attributes={attributes}></ListTable>
    </Container>
  );
};
// exporting the page with parent container layout..
export default Layout(Menu);
