import React from "react";
import CreateAudience from "../../audience";

export const audienceAttributes = [
  {
    type: "text",
    placeholder: "Name",
    name: "name",
    validation: "",
    group: "Audience Name",
    default: "",
    label: "Name",
    required: true,
    view: true,
    add: true,
    update: true,
    tag: true,
    customClass: "full",
    icon: "name",
  },
  {
    type: "select",
    apiType: "JSON",
    selectApi: [
      {
        value: "Current Event",
        id: "currentEvent",
        description: "Filter from current event",
      },
      {
        value: "Previous Event",
        id: "previousEvent",
        description: "Filter from previous event",
      },
    ],
    group: "Audience Name",
    placeholder: "Event Selection",
    name: "eventSelection",
    showItem: "value",
    selectType: "card",
    validation: "",
    default: "",
    tag: true,
    label: "Event Selection",
    required: true,
    view: true,
    add: true,
    update: true,
    filter: false,
    customClass: "full",
    icon: "event",
  },

  {
    type: "multiSelect",
    // selectType: "card",
    apiType: "API",
    selectApi: "event/my-events",
    placeholder: "Event",
    group: "Audience Name",
    name: "events",
    showItem: "value",
    validation: "",
    default: "",
    tag: true,
    label: "Events",
    required: true,
    condition: {
      item: "eventSelection",
      if: "previousEvent",
      then: "enabled",
      else: "disabled",
    },
    onChange: (name, updateValue) => {
      if (name === "eventSelection") {
        if (updateValue["eventSelection"] !== "previousEvent") {
          updateValue["excludeAlreadyRegistered"] = false;
        }
      }
      console.log(updateValue);
      return updateValue;
    },
    view: true,
    add: true,
    update: true,
    filter: false,
    customClass: "full",
    icon: "ticket",
  },
  {
    type: "multiSelect",
    placeholder: "Tickets",
    name: "tickets",
    selectType: "card",
    showItem: "value",
    apiType: "API",
    selectApi: "ticket/event-ticket",
    validation: "required",
    label: "Tickets",
    required: false,
    view: true,
    add: false,
    update: false,
    tag: true,
    icon: "maximum",
  },
  // {
  //   type: "number",
  //   placeholder: "Total Members",
  //   group: "Audience Name",
  //   name: "totalMembers",
  //   validation: "",
  //   default: "",
  //   tag: true,
  //   label: "Total Members",
  //   required: false,
  //   view: true,
  //   add: false,
  //   update: false,
  //   filter: false,
  //   customClass: "full",
  // },
  {
    type: "number",
    placeholder: "Unique Phone",
    group: "Audience Name",
    name: "uniquePhoneCount",
    validation: "",
    default: "",
    tag: true,
    label: "Unique Phone",
    required: false,
    view: true,
    add: false,
    update: false,
  },
  {
    type: "number",
    placeholder: "Total Email",
    group: "Audience Name",
    name: "uniqueEmailCount",
    validation: "",
    default: "",
    tag: true,
    label: "Unique Email",
    required: false,
    view: true,
    add: false,
    update: false,
  },
  {
    type: "element",
    name: "audience",
    label: "Audience",
    group: "Audience Filter",
    required: true,
    showError: false,
    view: false,
    add: true,
    update: true,
    element: (data, onChange) => {
      return <CreateAudience {...data} onChange={onChange} />;
    },
  },
];
