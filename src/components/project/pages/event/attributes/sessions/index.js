import moment from "moment";

export const sessionsAttributes = [
  {
    type: "text",
    placeholder: "Give your session a clear, descriptive name",
    name: "title",
    validation: "",
    default: "",
    label: "Session Title",
    icon: "session",
    tag: false,
    required: true,
    view: true,
    add: true,
    update: true,
  },
  {
    type: "select",
    apiType: "API",
    selectApi: "session-type/master/select",
    placeholder: "Select a session format",
    name: "sessiontype",
    validation: "",
    showItem: "value",
    default: "",
    icon: "session-input",
    tag: true,
    addNew: {
      attributes: [
        {
          type: "text",
          placeholder: "Enter Session Type",
          name: "sessionType",
          validation: "",
          default: "",
          label: "Add a session format",
          required: true,
          view: true,
          add: true,
          update: true,
          icon: "session",
        },
      ],
      api: "session-type",
      submitButtonText: "Create",
    },
    highlight: true,
    label: "Session Type",
    required: true,
    view: true,
    add: true,
    update: true,
    filter: true,
  },
  {
    type: "line",
    add: true,
    update: true,
  },
  {
    type: "date",
    placeholder: "Select date",
    name: "startTime",
    validation: "",
    default: "empty",
    label: "Start Date",
    default: moment().add(1, "day").set({ hour: 9, minute: 0, second: 0 }).toDate(), // Tomorrow 9 AM,
    minDate: moment().add(1, "day").startOf("day").toDate(), // Cannot select before tomorrow 12 AM
    tag: true,
    required: true,
    view: true,
    add: true,
    update: true,
    icon: "date",
    customClass: "full",
  },
  {
    type: "time",
    placeholder: "Select time",
    name: "startTime",
    validation: "",
    default: moment().add(1, "day").set({ hour: 9, minute: 0, second: 0 }).toDate(), // Tomorrow 9 AM,
    minDate: moment().add(1, "day").startOf("day").toDate(), // Cannot select before tomorrow 12 AM
    label: "Start Time",
    tag: false,
    required: true,
    view: true,
    add: true,
    update: true,
    icon: "time",
    customClass: "half",
  },
  {
    type: "time",
    placeholder: "Select time",
    name: "endTime",
    validation: "",
    default: "empty",
    label: "End Time",
    minDate: moment().add(-70, "years").toDate(),
    tag: false,
    required: true,
    view: true,
    add: true,
    update: true,
    icon: "time",
    customClass: "half",
  },
  // {
  //   type: "datetime",
  //   placeholder: "Select Time",
  //   name: "startTime",
  //   validation: "",
  //   icon: "time",
  //   default: "",
  //   tag: true,
  //   label: "Start Time",
  //   required: false,
  //   view: true,
  //   add: true,
  //   update: true,
  //   customClass: "half",
  // },
  // {
  //   type: "datetime",
  //   placeholder: "Select Time",
  //   name: "endTime",
  //   icon: "time",
  //   validation: "",
  //   default: "",
  //   tag: true,
  //   label: "End Time",
  //   required: false,
  //   view: true,
  //   add: true,
  //   update: true,
  //   customClass: "half",
  // },
  {
    type: "line",
    add: true,
    update: true,
  },
  {
    type: "select",
    apiType: "API",
    selectApi: "stage/master/select",
    placeholder: "Enter session location",
    name: "stage",
    validation: "",
    showItem: "value",
    default: "",
    icon: "stage",
    addNew: {
      label: "Add stage or hall",
      attributes: [
        {
          type: "text",
          placeholder: "Enter session location",
          name: "stage",
          validation: "",
          default: "",
          label: "Stage or Hall",
          required: true,
          view: true,
          add: true,
          update: true,
        },
      ],
      api: "stage",
      submitButtonText: "Create",
    },
    label: "Stage or Hall",
    required: false,
    view: true,
    add: true,
    update: true,
    filter: true,
  },
  {
    type: "multiSelect",
    apiType: "API",
    selectApi: "speakers/speaker-event",
    placeholder: "Select speaker for this session",
    updateOn: "event",
    name: "speakers",
    validation: "",
    showItem: "value",
    icon: "speakers",
    addNew: {
      label: "Add speaker",
      attributes: [
        {
          type: "text",
          placeholder: "Title",
          name: "name",
          validation: "",
          default: "",
          label: "Add a speaker",
          required: true,
          view: true,
          add: true,
          update: true,
          icon: "speakers",
        },
        {
          type: "text",
          placeholder: "Organization or Affiliation",
          name: "company",
          validation: "",
          default: "",
          label: "Company",
          tag: true,
          required: false,
          view: true,
          add: true,
          update: true,
          icon: "company",
        },
        {
          type: "text",
          placeholder: "Marketing Manager",
          name: "designation",
          validation: "",
          default: "",
          label: "Designation",
          tag: true,
          required: false,
          view: true,
          add: true,
          update: true,
          icon: "user-group",
        },
        {
          type: "image",
          placeholder: "Image",
          name: "photo",
          validation: "",
          default: "false",
          tag: false,
          label: "Profile Picture",
          sublabel: "Optional",
          required: false,
          view: true,
          add: true,
          update: true,
        },
      ],
      api: "speakers",
      submitButtonText: "Create",
    },
    default: "",
    tag: false,
    label: "Speakers",
    required: false,
    view: true,
    add: true,
    update: true,
    filter: true,
    search: true,
    footnote: "Speakers can be assigned to this session after it is created",
  },
  // {
  //   type: "select",
  //   apiType: "API",
  //   selectApi: "day/master/select",
  //   placeholder: "Select event day",
  //   name: "day",
  //   validation: "",
  //   showItem: "value",
  //   default: "",
  //   tag: true,
  //   icon: "event",
  //   addNew: {
  //     attributes: [
  //       {
  //         type: "text",
  //         placeholder: "Enter Event Day",
  //         name: "day",
  //         validation: "",
  //         default: "",
  //         label: "Add an event day",
  //         required: true,
  //         view: true,
  //         add: true,
  //         update: true,
  //         icon: "event ",
  //       },
  //     ],
  //     api: "day",
  //     submitButtonText: "Create",
  //   },
  //   label: "Event Day",
  //   required: true,
  //   view: true,
  //   add: true,
  //   update: true,
  //   filter: true,
  // },
  // {
  //   type: "line",
  //   add: true,
  //   update: true,
  // },
  {
    type: "textarea",
    placeholder: "Describe session content and benefits",
    name: "description",
    validation: "",
    default: "",
    label: "Session Description",
    sublabel: "Optional",
    customClass: "full",
    tag: false,
    required: false,
    view: true,
    add: true,
    update: true,
    icon: "description",
  },
  {
    type: "select",
    placeholder: "Applicable Tickets",
    name: "ticketType",
    validation: "",
    tag: false,
    editable: true,
    label: "Who Can Attend?",
    sublabel: "",
    showItem: "",
    required: false,
    customClass: "full",
    filter: false,
    view: true,
    add: true,
    update: true,
    apiType: "JSON",
    selectType: "card",
    selectApi: [
      { value: "All Tickets", id: 0, description: "Everyone with any ticket type can join" },
      { value: "Selected Tickets & Participant types", id: 1, description: "Limit access to specific ticket types only" },
    ],
  },
  {
    type: "multiSelect",
    placeholder: "Select Tickets",
    name: "ticket",
    condition: {
      item: "ticketType",
      if: 1,
      then: "enabled",
      else: "disabled",
    },
    validation: "",
    tag: false,
    editable: true,
    label: "Select Tickets",
    showItem: "",
    required: false,
    view: true,
    filter: false,
    add: true,
    update: true,
    updateOn: "event",
    apiType: "API",
    selectApi: "ticket/event-ticket",
  },
  {
    type: "toggle",
    placeholder: "Limit Number Of Attendees",
    name: "limitNumOfAttendees",
    validation: "",
    default: "",
    label: "Limit Number Of Attendees",
    required: false,
    view: true,
    add: true,
    update: true,
  },
  {
    type: "number",
    placeholder: "Number Of Bookings",
    name: "numOfBooking",
    validation: "",
    default: 0,
    label: "Number Of Bookings",
    condition: {
      item: "limitNumOfAttendees",
      if: true,
      then: "enabled",
      else: "disabled",
    },
    required: false,
    view: true,
    add: true,
    update: true,
  },
];

export const sessionSpeakerAttributes = [
  {
    type: "text",
    placeholder: "Title",
    name: "title",
    validation: "",
    default: "",
    label: "Title",
    icon: "session",
    tag: true,
    required: true,
    view: true,
    add: true,
    update: true,
  },
  {
    type: "datetime",
    placeholder: "Start Time",
    name: "startTime",
    validation: "",
    icon: "time",
    tag: true,
    default: moment().add(1, "day").set({ hour: 9, minute: 0, second: 0 }).toDate(), // Tomorrow 9 AM,
    minDate: moment().add(1, "day").startOf("day").toDate(), // Cannot select before tomorrow 12 AM
    label: "Start Time",
    required: false,
    view: true,
    add: true,
    update: true,
    customClass: "half",
  },
  {
    type: "datetime",
    placeholder: "End Time",
    name: "endTime",
    icon: "time",
    validation: "",
    default: moment().add(1, "day").set({ hour: 9, minute: 0, second: 0 }).toDate(), // Tomorrow 9 AM,
    minDate: moment().add(1, "day").startOf("day").toDate(), // Cannot select before tomorrow 12 AM
    tag: true,
    label: "End Time",
    required: false,
    view: true,
    add: true,
    update: true,
    customClass: "half",
  },
  {
    type: "textarea",
    placeholder: "A brief description about the session ...",
    name: "description",
    validation: "",
    default: "",
    label: "Description",
    sublabel: "Optional",
    customClass: "full",
    tag: false,
    required: false,
    view: true,
    add: true,
    update: true,
  },
  {
    type: "select",
    apiType: "API",
    selectApi: "speakers/session-event",
    placeholder: "Speakers",
    updateOn: "session",
    name: "speakers",
    validation: "",
    showItem: "name",
    default: "",
    tag: true,
    label: "Speakers",
    required: true,
    view: true,
    add: true,
    update: true,
    filter: true,
    search: true,
    footnote: "Speakers can be assigned to this session after it is created",
  },
  {
    type: "number",
    placeholder: "Order Id",
    name: "orderId",
    validation: "",
    default: "",
    label: "Order Id",
    tag: true,
    required: true,
    view: true,
    add: true,
    update: true,
  },
  {
    type: "select",
    apiType: "API",
    selectApi: "session/select",
    placeholder: "Session",
    name: "session",
    validation: "",
    showItem: "value",
    default: "",
    tag: false,
    label: "Session",
    required: false,
    view: false,
    add: false,
    update: false,
    filter: false,
  },
];
